name: Lint and Deploy

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: "pnpm/action-setup@v4"
      - uses: "actions/setup-node@v6"
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: "Install dependencies"
        run: "pnpm install --frozen-lockfile"

      - name: "Run eslint"
        run: "pnpm run lint"

      - name: "Run prettier"
        run: "pnpm run fmt"

      - name: "Run typecheck"
        run: "pnpm run typecheck"

  deploy:
    runs-on: ubuntu-latest
    needs: "lint"
    if:
      "${{ github.ref == 'refs/heads/main' || startsWith(github.ref,
      'refs/tags/') }}"
    steps:
      - uses: actions/checkout@v5
      - uses: "pnpm/action-setup@v4"
      - uses: "actions/setup-node@v6"
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: "Install dependencies"
        run: "pnpm install --frozen-lockfile"

      - name: Build & Deploy Worker (beta)
        if: "${{ github.ref == 'refs/heads/main' }}"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: "pnpm run deploy --env beta"

      - name: Build & Deploy Worker (prod)
        if: "${{ startsWith(github.ref, 'refs/tags/') }}"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: "pnpm run deploy"
